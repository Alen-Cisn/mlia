{
  // === Rust Language Settings ===
  "rust-analyzer.cargo.buildScripts.enable": true,
  "rust-analyzer.cargo.features": "all",
  "rust-analyzer.imports.granularity.group": "module",
  "rust-analyzer.imports.prefix": "crate",
  "rust-analyzer.procMacro.enable": true,
  "rust-analyzer.lens.enable": true,
  "rust-analyzer.lens.run.enable": true,
  "rust-analyzer.lens.debug.enable": true,
  "rust-analyzer.lens.implementations.enable": true,
  "rust-analyzer.lens.references.enable": true,
  "rust-analyzer.lens.methodReferences.enable": true,
  "rust-analyzer.lens.enumVariantReferences.enable": true,
  "rust-analyzer.completion.addCallParentheses": true,
  "rust-analyzer.completion.addCallArgumentSnippets": true,
  "rust-analyzer.completion.postfix.enable": true,
  "rust-analyzer.hover.actions.enable": true,
  "rust-analyzer.hover.actions.implementations.enable": true,
  "rust-analyzer.hover.actions.references.enable": true,
  "rust-analyzer.hover.actions.run.enable": true,
  "rust-analyzer.hover.actions.debug.enable": true,
  "rust-analyzer.inlayHints.bindingModeHints.enable": true,
  "rust-analyzer.inlayHints.chainingHints.enable": true,
  "rust-analyzer.inlayHints.closingBraceHints.enable": true,
  "rust-analyzer.inlayHints.closingBraceHints.minLines": 10,
  "rust-analyzer.inlayHints.closureReturnTypeHints.enable": "with_block",
  "rust-analyzer.inlayHints.discriminantHints.enable": "fieldless",
  "rust-analyzer.inlayHints.expressionAdjustmentHints.enable": "reborrow",
  "rust-analyzer.inlayHints.implicitDrops.enable": true,
  "rust-analyzer.inlayHints.lifetimeElisionHints.enable": "skip_trivial",
  "rust-analyzer.inlayHints.parameterHints.enable": true,
  "rust-analyzer.inlayHints.typeHints.enable": true,
  "rust-analyzer.inlayHints.typeHints.hideClosureInitialization": false,
  "rust-analyzer.inlayHints.typeHints.hideNamedConstructor": false,

  // === Language Development Specific ===
  "rust-analyzer.assist.importGranularity": "module",
  "rust-analyzer.assist.importPrefix": "by_crate",
  "rust-analyzer.semanticHighlighting.strings.enable": true,
  "rust-analyzer.semanticHighlighting.punctuation.enable": true,
  "rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang": true,
  "rust-analyzer.semanticHighlighting.punctuation.specialization.enable": true,
  "rust-analyzer.semanticHighlighting.operator.enable": true,
  "rust-analyzer.semanticHighlighting.operator.specialization.enable": true,

  // === Editor Settings ===
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.formatOnPaste": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.rust-analyzer": "explicit",
    "source.organizeImports.rust-analyzer": "explicit"
  },
  "editor.rulers": [80, 100],
  "editor.wordWrap": "bounded",
  "editor.wordWrapColumn": 100,
  "editor.tabSize": 4,
  "editor.insertSpaces": true,
  "editor.detectIndentation": false,
  "editor.renderWhitespace": "boundary",
  "editor.trimAutoWhitespace": true,
  "editor.semanticHighlighting.enabled": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  "editor.minimap.enabled": true,
  "editor.minimap.renderCharacters": false,
  "editor.minimap.showSlider": "always",

  // === File Settings ===
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.exclude": {
    "**/target": true,
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true
  },
  "files.watcherExclude": {
    "**/target/**": true
  },

  // === Search Settings ===
  "search.exclude": {
    "**/target": true,
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true
  },

  // === Terminal Settings ===
  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.env.linux": {
    "RUST_BACKTRACE": "1",
    "RUST_LOG": "debug"
  },

  // === Git Settings ===
  "git.ignoreLimitWarning": true,
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.suggestSmartCommit": true,

  // === Language Specific Settings ===
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    "editor.formatOnSave": true,
    "editor.semanticHighlighting.enabled": true,
    "editor.suggest.insertMode": "replace"
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml"
  },
  "[markdown]": {
    "editor.wordWrap": "on",
    "editor.quickSuggestions": {
      "comments": "off",
      "strings": "off",
      "other": "off"
    }
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // === MLia Language Support ===
  "files.associations": {
    "*.mlia": "ocaml", // Use OCaml syntax highlighting as it's similar to ML
    "*.ml": "ocaml"
  },

  // === Problem Matchers ===
  "problems.decorations.enabled": true,
  "problems.showCurrentInStatus": true,

  // === Extension Specific Settings ===
  "lldb.displayFormat": "auto",
  "lldb.dereferencePointers": true,
  "lldb.consoleMode": "commands",
  "lldb.showDisassembly": "auto",

  // === Workspace Specific ===
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "Cargo.toml": "Cargo.lock",
    "*.rs": "${capture}.rlib",
    "README.md": "README.*"
  },

  // === Performance Settings ===
  "rust-analyzer.cargo.loadOutDirsFromCheck": true,
  "rust-analyzer.procMacro.attributes.enable": true,
  "rust-analyzer.experimental.procAttrMacros": true,
  "rust-analyzer.workspace.symbol.search.scope": "workspace_and_dependencies",
  "rust-analyzer.workspace.symbol.search.kind": "all_symbols"
}
